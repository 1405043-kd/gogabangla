# Generated by Django 2.0.7 on 2018-07-20 19:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('social_django', '0008_partial_timestamp'),
    ]

    operations = [
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('define', models.CharField(max_length=300)),
                ('sentence_ex', models.CharField(max_length=1000)),
                ('added_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('like_count', models.IntegerField(default=0)),
                ('dislike_count', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('adder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_django.UserSocialAuth')),
            ],
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='definitions.Definition')),
                ('dliker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_django.UserSocialAuth')),
            ],
        ),
        migrations.CreateModel(
            name='GogaPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=1000)),
                ('user_id', models.CharField(max_length=1000)),
                ('user_name', models.CharField(max_length=1000)),
                ('user_email', models.CharField(max_length=1000)),
                ('gender', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='definitions.Definition')),
                ('liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_django.UserSocialAuth')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('word_name', models.CharField(max_length=100, unique=True)),
                ('adder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_django.UserSocialAuth')),
            ],
        ),
        migrations.AddField(
            model_name='definition',
            name='antonyms',
            field=models.ManyToManyField(related_name='antonyms', to='definitions.Word'),
        ),
        migrations.AddField(
            model_name='definition',
            name='synonyms',
            field=models.ManyToManyField(related_name='synonyms', to='definitions.Word'),
        ),
        migrations.AddField(
            model_name='definition',
            name='tags',
            field=models.ManyToManyField(to='definitions.Tag'),
        ),
        migrations.AddField(
            model_name='definition',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='definitions.Word'),
        ),
    ]
